// <auto-generated />
using System;
using Hotelio.Modules.Pricing.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotelio.Modules.Pricing.Infrastructure.Migrations
{
    [DbContext(typeof(PricingDbContext))]
    [Migration("20250220150245_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("pricing")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.AmenityTariff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AmenityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("HotelTariffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelTariffId");

                    b.ToTable("AmenityTariff", "pricing");
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.HotelTariff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HotelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HotelTariffs", "pricing");
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.PeriodPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomTariffId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomTariffId");

                    b.ToTable("PeriodPrice", "pricing");
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.RoomTariff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HotelTariffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoomTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelTariffId");

                    b.ToTable("RoomTariff", "pricing");
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.AmenityTariff", b =>
                {
                    b.HasOne("Hotelio.Modules.Pricing.Domain.Model.HotelTariff", null)
                        .WithMany("AmenityTariffs")
                        .HasForeignKey("HotelTariffId");

                    b.OwnsOne("Hotelio.Shared.Domain.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("AmenityTariffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PriceCurrency");

                            b1.Property<double>("NetAmount")
                                .HasColumnType("float")
                                .HasColumnName("PriceNetAmount");

                            b1.Property<int>("TaxRate")
                                .HasColumnType("int")
                                .HasColumnName("PriceTaxRate");

                            b1.HasKey("AmenityTariffId");

                            b1.ToTable("AmenityTariff", "pricing");

                            b1.WithOwner()
                                .HasForeignKey("AmenityTariffId");
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.HotelTariff", b =>
                {
                    b.OwnsOne("Hotelio.Shared.Domain.Price", "BasePrice", b1 =>
                        {
                            b1.Property<Guid>("HotelTariffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BasePriceCurrency");

                            b1.Property<double>("NetAmount")
                                .HasColumnType("float")
                                .HasColumnName("BasePriceNetAmount");

                            b1.Property<int>("TaxRate")
                                .HasColumnType("int")
                                .HasColumnName("BasePriceTaxRate");

                            b1.HasKey("HotelTariffId");

                            b1.ToTable("HotelTariffs", "pricing");

                            b1.WithOwner()
                                .HasForeignKey("HotelTariffId");
                        });

                    b.Navigation("BasePrice")
                        .IsRequired();
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.PeriodPrice", b =>
                {
                    b.HasOne("Hotelio.Modules.Pricing.Domain.Model.RoomTariff", null)
                        .WithMany("PeriodPrices")
                        .HasForeignKey("RoomTariffId");

                    b.OwnsOne("Hotelio.Modules.Pricing.Domain.Model.Period", "Period", b1 =>
                        {
                            b1.Property<Guid>("PeriodPriceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndDate");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartDate");

                            b1.HasKey("PeriodPriceId");

                            b1.ToTable("PeriodPrice", "pricing");

                            b1.WithOwner()
                                .HasForeignKey("PeriodPriceId");
                        });

                    b.OwnsOne("Hotelio.Shared.Domain.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("PeriodPriceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PriceCurrency");

                            b1.Property<double>("NetAmount")
                                .HasColumnType("float")
                                .HasColumnName("PriceNetAmount");

                            b1.Property<int>("TaxRate")
                                .HasColumnType("int")
                                .HasColumnName("PriceTaxRate");

                            b1.HasKey("PeriodPriceId");

                            b1.ToTable("PeriodPrice", "pricing");

                            b1.WithOwner()
                                .HasForeignKey("PeriodPriceId");
                        });

                    b.Navigation("Period")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.RoomTariff", b =>
                {
                    b.HasOne("Hotelio.Modules.Pricing.Domain.Model.HotelTariff", null)
                        .WithMany("RoomTariffs")
                        .HasForeignKey("HotelTariffId");

                    b.OwnsOne("Hotelio.Shared.Domain.Price", "BasePrice", b1 =>
                        {
                            b1.Property<Guid>("RoomTariffId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("BasePriceCurrency");

                            b1.Property<double>("NetAmount")
                                .HasColumnType("float")
                                .HasColumnName("BasePriceNetAmount");

                            b1.Property<int>("TaxRate")
                                .HasColumnType("int")
                                .HasColumnName("BasePriceTaxRate");

                            b1.HasKey("RoomTariffId");

                            b1.ToTable("RoomTariff", "pricing");

                            b1.WithOwner()
                                .HasForeignKey("RoomTariffId");
                        });

                    b.Navigation("BasePrice")
                        .IsRequired();
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.HotelTariff", b =>
                {
                    b.Navigation("AmenityTariffs");

                    b.Navigation("RoomTariffs");
                });

            modelBuilder.Entity("Hotelio.Modules.Pricing.Domain.Model.RoomTariff", b =>
                {
                    b.Navigation("PeriodPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
