// <auto-generated />
using System;
using Hotelio.Modules.Booking.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotelio.Modules.Booking.Infrastructure.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20240405134048_BookingInit")]
    partial class BookingInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("booking")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotelio.Modules.Booking.Domain.Model.Reservation", b =>
                {
                    b.Property<string>("_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("_amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("amenities");

                    b.Property<string>("_hotelId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hotel_id");

                    b.Property<int>("_numberOfGuests")
                        .HasColumnType("int")
                        .HasColumnName("number_of_guests");

                    b.Property<string>("_ownerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("owner_id");

                    b.Property<int>("_paymentType")
                        .HasColumnType("int")
                        .HasColumnName("payment_type");

                    b.Property<double>("_pricePayed")
                        .HasColumnType("float")
                        .HasColumnName("price_payed");

                    b.Property<double>("_priceToPay")
                        .HasColumnType("float")
                        .HasColumnName("price_to_pay");

                    b.Property<string>("_roomId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("room_id");

                    b.Property<int>("_roomType")
                        .HasColumnType("int")
                        .HasColumnName("room_type");

                    b.Property<int>("_status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("_id");

                    b.ToTable("Reservations", "booking");
                });

            modelBuilder.Entity("Hotelio.Modules.Booking.Domain.Model.Reservation", b =>
                {
                    b.OwnsOne("Hotelio.Modules.Booking.Domain.Model.DateRange", "_dateRange", b1 =>
                        {
                            b1.Property<string>("Reservation_id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("end_date");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("start_date");

                            b1.HasKey("Reservation_id");

                            b1.ToTable("Reservations", "booking");

                            b1.WithOwner()
                                .HasForeignKey("Reservation_id");
                        });

                    b.Navigation("_dateRange");
                });
#pragma warning restore 612, 618
        }
    }
}
